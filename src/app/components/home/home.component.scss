table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 20px;
  font-family: "Segoe UI", Arial, sans-serif; /* Excelのようなフォント */
  border: 1px solid #c8c8c8; /* 全体の罫線 */
  box-shadow: 0 0 0 1px #c8c8c8; /* Excelのような外枠の影 */
  table-layout: fixed; /* 列の幅を固定 */
}

th,
td {
  border: 1px solid #e0e0e0; /* セルの罫線 */
  padding: 0; /* input/selectのパディングで調整するため0に */
  text-align: left;
  font-size: 13px;
  white-space: nowrap; /* セル内のテキストを折り返さない */
  box-sizing: border-box; /* ボーダーとパディングを幅に含める */
  overflow: hidden; /* コンテンツがセルからはみ出さないようにする */
  // text-overflow: ellipsis; /* はみ出したテキストを省略記号で表示 */
}

th {
  background-color: #f0f0f0; /* ヘッダーの背景色 */
  font-weight: normal; /* Excelのヘッダーは通常太字ではない */
  color: #555;
  border-bottom: 1px solid #c8c8c8; /* ヘッダーの下線 */
  text-transform: uppercase; /* ヘッダーのテキストを大文字に */
  padding: 8px 12px;
}

tr:nth-child(even) {
  background-color: #f9f9f9; /* 偶数行の背景色 */
}

tr.selected-row {
  /* セレクタの特異性を高める */
  background-color: #e0f2f7; /* 選択された行の背景色 */
  border: 1px solid #00bcd4; /* 選択された行の枠線 */
}

td:first-child {
  background-color: #f0f0f0; /* 最初の列（Index）の背景色 */
  text-align: center;
  font-weight: bold;
  color: #555;
}

/* 各列の幅を設定 */
th:nth-child(1),
td:nth-child(1) {
  width: 50px; /* Index列 */
}

/*
  【追加列の幅設定】
  home.component.html の `[].constructor(10)` の `10` を変更した場合、
  ここも変更後の列数に合わせてセレクタを調整する必要があります。
  例: 5列に減らした場合、`th:nth-child(2)` から `th:nth-child(6)` までに変更。
  例: 15列に増やす場合、`th:nth-child(2)` から `th:nth-child(16)` までに変更。
  `nth-child(n)` の `n` は、Index列 (1) の次から数え始めます。
*/
th:nth-child(2),
td:nth-child(2),
th:nth-child(3),
td:nth-child(3),
th:nth-child(4),
td:nth-child(4),
th:nth-child(5),
td:nth-child(5),
th:nth-child(6),
td:nth-child(6),
th:nth-child(7),
td:nth-child(7),
th:nth-child(8),
td:nth-child(8),
th:nth-child(9),
td:nth-child(9),
th:nth-child(10),
td:nth-child(10),
th:nth-child(11),
td:nth-child(11) {
  width: 80px; /* 追加列 */
}

/*
  【Input 2列 + Select 1列 のパターン列の幅設定】
  home.component.html の `[].constructor(6)` の `6` を変更した場合、
  ここも変更後の繰り返し回数に合わせてセレクタを調整する必要があります。
  `nth-child(n)` の `n` は、Index列と追加列の後に続く列から数え始めます。
  現在の設定では、追加列が10列あるため、Input列は12列目から始まります。
  例: 繰り返し回数を3回に減らした場合 (Input 6列 + Select 3列)、
      Input列は `th:nth-child(12)` から `th:nth-child(13)`、`th:nth-child(15)` から `th:nth-child(16)`、
      `th:nth-child(18)` から `th:nth-child(19)` までとなります。
*/
th:nth-child(12),
td:nth-child(12),
th:nth-child(13),
td:nth-child(13),
th:nth-child(15),
td:nth-child(15),
th:nth-child(16),
td:nth-child(16),
th:nth-child(18),
td:nth-child(18),
th:nth-child(19),
td:nth-child(19),
th:nth-child(21),
td:nth-child(21),
th:nth-child(22),
td:nth-child(22),
th:nth-child(24),
td:nth-child(24),
th:nth-child(25),
td:nth-child(25),
th:nth-child(27),
td:nth-child(27),
th:nth-child(28),
td:nth-child(28) {
  width: 100px; /* Input列 */
}

/*
  【Select列の幅設定】
  home.component.html の `[].constructor(6)` の `6` を変更した場合、
  ここも変更後の繰り返し回数に合わせてセレクタを調整する必要があります。
  現在の設定では、Select列は14列目から始まります。
  例: 繰り返し回数を3回に減らした場合 (Input 6列 + Select 3列)、
      Select列は `th:nth-child(14)`、`th:nth-child(17)`、`th:nth-child(20)` までとなります。
*/
th:nth-child(14),
td:nth-child(14),
th:nth-child(17),
td:nth-child(17),
th:nth-child(20),
td:nth-child(20),
th:nth-child(23),
td:nth-child(23),
th:nth-child(26),
td:nth-child(26),
th:nth-child(29),
td:nth-child(29) {
  width: 100px; /* Select列 */
}

/*
  【最終Status列の幅設定】
  この列はテーブルの最終列として固定されています。
  `home.component.ts` の `STATUS_COLUMN_INDEX` 定数と `NUM_COLUMNS` 定数の変更に合わせて、
  `nth-child()` の値を更新する必要があります。
  現在の設定では、31列目です。
*/
th:nth-child(31),
td:nth-child(31) {
  width: 100px; /* 最終Status列 */
}

/* フォームの値を変更した状態では赤字に変更するのみ */
.changed select {
  color: red !important;
  font-weight: bold;
}

/* 確認モードで選択されたセル */
.selected-for-confirmation {
  background-color: #fff3e0; /* 薄いオレンジ色 */
  border: 2px solid #ff9800; /* オレンジ色の枠線 */
}

/* 最終確認後も文字は赤字で表示され、セルの枠の色は保持されたまま */
.confirmed-and-cleared {
  background-color: #ffe6e6; /* 確定されたら背景色を薄い赤に */
  border: 2px solid #00bcd4; /* 枠の色は保持 */
}

.confirmed-and-cleared select {
  color: red !important; /* select内の文字も赤字にする */
  background-color: #ffe6e6;
}

/* 選択されたセル */
td.selected-cell {
  background-color: #e0f2f7; /* 薄い青色 */
  outline: 2px solid #00bcd4; /* 青い枠線 */
  outline-offset: -1px; /* 枠線がセル内に表示されるように調整 */
}

/* 確認モードで選択され、かつ現在選択されているセル */
td.selected-cell.selected-for-confirmation {
  background-color: #fff3e0; /* 薄いオレンジ色 */
  outline: 2px solid #ff9800; /* オレンジ色の枠線 */
  outline-offset: -1px; /* 枠線がセル内に表示されるように調整 */
}

td input, /* input要素のボーダーを確実に削除 */
td select {
  display: block; /* 親のtdの幅いっぱいに広がるように設定 */
  width: 100%;
  padding: 6px 0px; /* input/selectのパディングを調整 */
  border: none !important; /* ボーダーを強制的に削除 */
  border-radius: 0; /* 角丸をなくす */
  background-color: transparent !important; /* 背景色を強制的に透明に */
  font-size: 13px;
  font-family: "Segoe UI", Arial, sans-serif; /* Excelのようなフォント */
  box-sizing: border-box; /* パディングとボーダーを幅に含める */
  outline: none; /* フォーカス時のアウトラインを削除 */
}

td select {
  // -webkit-appearance: none; /* デフォルトのスタイルを無効化 */
  // -moz-appearance: none;
  // appearance: none;
  /* ドロップダウン矢印を強制的に削除 */
  background-image: none !important;
  background-repeat: initial;
  background-position: initial;
  background-size: initial;

  &[disabled] {
    pointer-events: none; /* 無効化されたselect要素のクリックイベントを透過させる */
  }
}
